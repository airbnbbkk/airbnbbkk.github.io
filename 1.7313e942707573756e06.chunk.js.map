{"version":3,"sources":["./src/app/services/services-pickup/dialog-confirm/services-pickup-dialog-confirm.scss","./src/app/services/services-pickup/services-pickup.component.scss","./src/app/services/services-pickup/dialog-booking/services-pickup-dialog-booking.scss","./src/app/services/services-pickup/dialog-booking/services-pickup-dialog-booking.scss?f66c","./src/app/services/services-pickup/dialog-confirm/services-pickup-dialog-confirm.scss?55b0","./src/app/services/services-pickup/services-pickup.component.html","./src/app/services/services-pickup/dialog-booking/services-pickup-dialog-booking.html","./src/app/services/services-pickup/dialog-confirm/services-pickup-dialog-confirm.html","./src/app/services/services-pickup/services-pickup.component.scss?1aea","./src/app/services/services-pickup/services-pickup.const.ts","./src/app/services/services-pickup/dialog-confirm/services-pickup-dialog-confirm.ts","./src/app/services/services-pickup/dialog-booking/services-pickup-dialog-booking.ts","./src/app/services/services-pickup/services-pickup.component.ts","./src/app/services/services-pickup/services-pickup.module.ts"],"names":["module","exports","__webpack_require__","undefined","push","i","result","toString","PICKUP_SPOTS","ServicesPickupInfo","vehicles","name","en","ko","cn","capacity","price","img","spots","type","SUVARNABHUMI","i18n","location","DONMUEANG","HOUSE","services_pickup_dialog_confirm_ServicesPickupDialogConfirmComponent","ServicesPickupDialogConfirmComponent","data","dialog","confirmDialog","airbnbApi","translate","this","submitted","prototype","submit","res","sendMessage","message","resTemp","requestShuttleService","bookingNumber","amount","subs","subscribe","r","console","log","_this","closeAll","alert","err","tslib_es6","unsubscribe","_a","sent","resTempSubs","Object","core","selector","material_es5","airbnb_api_service","translationModule_provider","services_pickup_dialog_booking_ServicesPickupDialogBookingComponent","ServicesPickupDialogBookingComponent","formBuilder","pickupInfo","assign","selectedVehicle","confirmCode","form","group","vehicle","tripType","departure","destination","value","disabled","airportForm","time","date","flightName","flightNumber","houseForm","departures","slice","valueChanges","formData","ngOnInit","get","setValue","getCurrentLang","getPickupPrice","changeSpotOptions","departureForm","destinationForm","tripTypeForm","enabled","enable","disable","filter","spot","fixDestinationToHouse","onSubmit","invalid","generateMessage","validateAllFormFields","valid","openConfirmDialog","open","panelClass","height","title","fromAirport","fromHouse","convertToReadableDate","formGroup","keys","controls","forEach","field","control","esm5_forms","markAsTouched","onlySelf","moment","format","services_pickup_component_ServicesPickupComponent","ServicesPickupComponent","appState","openDialog","app_service","services_pickup_module_ServicesPickupModule","ServicesPickupModule","declarations","imports","common","ng_material_module","router","forChild","path","component","entryComponents"],"mappings":"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","file":"1.7313e942707573756e06.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"/* fonts */\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./node_modules/sass-resources-loader/lib/loader.js?{\"resources\":[\"/Users/jake/workspace/airbnb-bangkok/src/styles/_variables.scss\"]}!./src/app/services/services-pickup/dialog-confirm/services-pickup-dialog-confirm.scss\n// module id = B4vt\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"/* fonts */\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./node_modules/sass-resources-loader/lib/loader.js?{\"resources\":[\"/Users/jake/workspace/airbnb-bangkok/src/styles/_variables.scss\"]}!./src/app/services/services-pickup/services-pickup.component.scss\n// module id = HH+b\n// module chunks = 1","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"/* fonts */\\n:host {\\n  display: block; }\\n\\n.nj-form-field {\\n  padding-bottom: 0;\\n  margin-bottom: 1.50em; }\\n  .nj-form-field label {\\n    color: rgba(0, 0, 0, 0.54); }\\n\\n.time-input {\\n  height: 1rem;\\n  width: 50%;\\n  border: none;\\n  border-bottom: 1px solid;\\n  border-radius: 0;\\n  background: none; }\\n  .time-input.ng-invalid.ng-touched {\\n    border-color: red; }\\n\\n.nj-booking-date-picker {\\n  width: 100%; }\\n\\n.mat-input-element,\\ninput[type='time'],\\ninput[type='text'] {\\n  font-size: 16px; }\\n\\n.nj-form-field-spots td {\\n  width: 50%; }\\n\\n.nj-form-field-spots .icon-col {\\n  width: inherit; }\\n\\ntable {\\n  width: 100%; }\\n  table caption {\\n    text-align: left; }\\n  table td mat-form-field, table td mat-select {\\n    width: 100%; }\\n\\n.button-box .total-price-form-field {\\n  width: 40%; }\\n\\n.button-box .submit-button {\\n  margin-left: 10%; }\\n\\n.pickup-card .nj-card-header /deep/ .mat-card-header-text {\\n  margin: 0; }\\n\\n.pickup-card .nj-card-header .nj-card-title .nj-card-title-icon {\\n  font-size: 1.2rem; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./node_modules/sass-resources-loader/lib/loader.js?{\"resources\":[\"/Users/jake/workspace/airbnb-bangkok/src/styles/_variables.scss\"]}!./src/app/services/services-pickup/dialog-booking/services-pickup-dialog-booking.scss\n// module id = I0by\n// module chunks = 1","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/lib/loader.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--3-3!./services-pickup-dialog-booking.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/services-pickup/dialog-booking/services-pickup-dialog-booking.scss\n// module id = SoS8\n// module chunks = 1","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/sass-loader/lib/loader.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ref--3-3!./services-pickup-dialog-confirm.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/services-pickup/dialog-confirm/services-pickup-dialog-confirm.scss\n// module id = YMSO\n// module chunks = 1","module.exports = \"<mat-card class=\\\"nj-card\\\">\\n  <mat-card-header class=\\\"nj-card-header\\\">\\n    <mat-card-title class=\\\"nj-card-title\\\">\\n      <mat-icon class=\\\"nj-card-title-icon\\\">local_airport</mat-icon>\\n      <span class=\\\"nj-card-title-text\\\">{{ 'SERVICES.SHUTTLE' | translate}}</span>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content class=\\\"nj-card-content\\\">\\n    <div class=\\\"description-box\\\">\\n      <p>\\n        {{ 'SERVICES.SHUTTLE_DESCRIPTION' | translate}}\\n      </p>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n<mat-card class=\\\"nj-card\\\">\\n  <mat-card-header class=\\\"nj-card-header\\\">\\n    <mat-card-title class=\\\"nj-card-title\\\">\\n      <mat-icon class=\\\"nj-card-title-icon\\\">directions_car</mat-icon>\\n      <span class=\\\"nj-card-title-text\\\">{{ 'SERVICES.SHUTTLE_VEHICLE_LIST' | translate}}</span>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-divider></mat-divider>\\n  <mat-card-content class=\\\"nj-card-content\\\">\\n    <mat-list>\\n      <mat-tab-group>\\n        <mat-tab label=\\\"{{vehicle.name[translate.getCurrentLang()]}}\\\"\\n                *ngFor=\\\"let vehicle of pickupInfo.vehicles; let i = index\\\">\\n          <mat-list dense class=\\\"nj-card-list\\\">\\n            <mat-card class=\\\"example-card\\\">\\n              <!--<mat-card-header>\\n                <mat-card-title>{{vehicle.name[translate.getCurrentLang()]}}</mat-card-title>\\n                <mat-card-subtitle></mat-card-subtitle>\\n              </mat-card-header>-->\\n              <img mat-card-image src=\\\"assets/img/{{vehicle.img}}\\\">\\n              <mat-card-content>\\n                <mat-list>\\n                  <mat-list-item class=\\\"nj-card-list-item\\\">\\n                    <mat-icon mat-list-icon class=\\\"nj-card-list-item-icon\\\">people</mat-icon>\\n                    <h4 matLine class=\\\"nj-card-list-item-heading\\\">{{'SERVICES.SHUTTLE_CAPACITY'\\n                      | translate}}</h4>\\n                    <p matLine class=\\\"nj-card-list-item-text\\\"> {{vehicle.capacity}}\\n                      {{'SERVICES.SHUTTLE_PEOPLE' |\\n                      translate}} </p>\\n                  </mat-list-item>\\n                  <mat-list-item class=\\\"nj-card-list-item\\\">\\n                    <mat-icon mat-list-icon class=\\\"nj-card-list-item-icon\\\">payment</mat-icon>\\n                    <h4 matLine class=\\\"nj-card-list-item-heading\\\">{{'SERVICES.SHUTTLE_PRICE' |\\n                      translate}}</h4>\\n                    <p matLine class=\\\"nj-card-list-item-text\\\"> {{vehicle.price | number}} {{ 'COMMON.BAHT' |\\n                      translate}}</p>\\n                  </mat-list-item>\\n                </mat-list>\\n              </mat-card-content>\\n              <mat-card-actions>\\n                <button mat-raised-button color=\\\"primary\\\" (click)=\\\"openDialog(vehicle)\\\">{{'SERVICES.SHUTTLE_BOOK'\\n                  | translate}}</button>\\n              </mat-card-actions>\\n            </mat-card>\\n          </mat-list>\\n        </mat-tab>\\n      </mat-tab-group>\\n    </mat-list>\\n  </mat-card-content>\\n</mat-card>\\n<mat-card class=\\\"nj-card\\\">\\n  <mat-card-header class=\\\"nj-card-header\\\">\\n    <mat-card-title class=\\\"nj-card-title\\\">\\n      <mat-icon class=\\\"nj-card-title-icon\\\">place</mat-icon>\\n      <span class=\\\"nj-card-title-text\\\">{{ 'SERVICES.SHUTTLE_PICKUP_SPOT' | translate}}</span>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content class=\\\"nj-card-content\\\">\\n    <p>\\n      {{ 'SERVICES.SHUTTLE_PICKUP_SPOT_INFO' | translate}}\\n    </p>\\n    <mat-card class=\\\"nj-card\\\">\\n      <mat-card-header class=\\\"nj-card-header\\\">\\n        <mat-card-title class=\\\"nj-card-title\\\">\\n          <mat-icon class=\\\"nj-card-title-icon\\\">warning</mat-icon>\\n          <span class=\\\"nj-card-title-text\\\">{{ 'COMMON.ATTENTION' | translate | uppercase}}</span>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <p class=\\\"warn-box\\\">{{ 'SERVICES.SHUTTLE_PICKUP_SPOT_WARN' | translate}}</p>\\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card class=\\\"nj-card\\\">\\n      <mat-card-header class=\\\"nj-card-header\\\">\\n        <mat-card-title class=\\\"nj-card-title\\\">\\n          <span\\n            class=\\\"nj-card-title-text\\\">{{ 'SERVICES.SHUTTLE_SUVARNABHUMI' | translate}}</span>\\n        </mat-card-title>\\n        <mat-card-subtitle>\\n          {{ 'SERVICES.SHUTTLE_SUVARNABHUMI_INFO' | translate}}\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n      <img mat-card-image src=\\\"assets/img/pickup_suvan_airport.jpg\\\">\\n    </mat-card>\\n    <mat-card class=\\\"nj-card\\\">\\n      <mat-card-header class=\\\"nj-card-header\\\">\\n        <mat-card-title class=\\\"nj-card-title\\\">\\n          <span class=\\\"nj-card-title-text\\\">{{ 'SERVICES.SHUTTLE_DONMUEANG' | translate}}</span>\\n        </mat-card-title>\\n        <mat-card-subtitle>\\n          {{ 'SERVICES.SHUTTLE_DONMUEANG_INFO' | translate}}\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n      <img mat-card-image src=\\\"assets/img/pickup_dmk_airport.jpg\\\">\\n    </mat-card>\\n    <mat-card class=\\\"nj-card\\\">\\n      <mat-card-header class=\\\"nj-card-header\\\">\\n        <mat-card-title class=\\\"nj-card-title\\\">\\n          <span class=\\\"nj-card-title-text\\\">{{ 'SERVICES.SHUTTLE_HOUSE' | translate}}</span>\\n        </mat-card-title>\\n        <mat-card-subtitle>\\n          {{ 'SERVICES.SHUTTLE_HOUSE_INFO' | translate}}\\n        </mat-card-subtitle>\\n      </mat-card-header>\\n    </mat-card>\\n  </mat-card-content>\\n</mat-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/services-pickup/services-pickup.component.html\n// module id = ZVxH\n// module chunks = 1","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" #heroForm=\\\"ngForm\\\">\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Vehicle Type\\\"\\n           formControlName=\\\"vehicle\\\" readonly>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"{{'SERVICES.SHUTTLE_CONFIRMATION_CODE' | translate}}\\\"\\n           formControlName=\\\"bookingNumber\\\" pattern=\\\"[a-zA-Z0-9]*\\\" required>\\n    <mat-error *ngIf=\\\"form.controls['bookingNumber'].hasError('pattern')\\\">\\n      {{'COMMON.ERROR_MESSAGES.ALPHANUMERIC_ONLY' | translate}}\\n    </mat-error>\\n  </mat-form-field>\\n  <div class=\\\"\\\">\\n    <mat-radio-group name=\\\"trip\\\" formControlName=\\\"tripType\\\" (change)=\\\"changeSpotOptions()\\\">\\n      <mat-radio-button value=\\\"oneway\\\">{{'SERVICES.SHUTTLE_ONEWAY' | translate}}\\n      </mat-radio-button>\\n      <span>&nbsp;</span>\\n      <mat-radio-button value=\\\"round\\\">{{'SERVICES.SHUTTLE_ROUNDTRIP' | translate}}\\n      </mat-radio-button>\\n    </mat-radio-group>\\n  </div>\\n  <div class=\\\"nj-form-field-spots nj-form-field\\\">\\n    <table cellspacing=\\\"0\\\">\\n      <tr>\\n        <td>\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"{{'SERVICES.SHUTTLE_DEPARTURE' | translate}}\\\"\\n                        name=\\\"departure\\\"\\n                        formControlName=\\\"departure\\\"\\n                        floatPlaceholder=\\\"never\\\"\\n                        (change)=\\\"changeSpotOptions()\\\" required>\\n              <mat-option *ngFor=\\\"let airport of departures\\\" [value]=\\\"airport.type\\\">\\n                {{airport.name.i18n | translate}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </td>\\n        <td class=\\\"icon-col\\\">\\n          <mat-icon cxlass=\\\"nj-card-title-icon\\\">{{form.get('tripType').value === 'oneway' ?\\n            'trending_flat':'swap_horiz'}}\\n          </mat-icon>\\n        </td>\\n        <td>\\n          <mat-form-field>\\n            <mat-select placeholder=\\\"{{'SERVICES.SHUTTLE_DESTINATION' | translate}}\\\"\\n                        name=\\\"destination\\\"\\n                        floatPlaceholder=\\\"never\\\"\\n                        formControlName=\\\"destination\\\" required>\\n              <mat-option *ngFor=\\\"let airport of destination\\\" [value]=\\\"airport.type\\\">\\n                {{airport.name.i18n | translate}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n  <mat-card class=\\\"airport-pickup-card pickup-card nj-card\\\"\\n            *ngIf=\\\"form.controls['departure'].value !== PICKUP_SPOTS.HOUSE\\\">\\n    <mat-card-header class=\\\"nj-card-header\\\">\\n      <mat-card-title class=\\\"nj-card-title\\\">\\n        <mat-icon class=\\\"nj-card-title-icon\\\">local_airport</mat-icon>\\n        <mat-icon class=\\\"nj-card-title-icon\\\">trending_flat</mat-icon>\\n        <mat-icon class=\\\"nj-card-title-icon\\\">home</mat-icon>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <form [formGroup]=\\\"airportForm\\\">\\n      <mat-card-content class=\\\"nj-card-content\\\">\\n        <table cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"nj-booking-date-picker\\\">\\n                <input matInput [matDatepicker]=\\\"picker\\\" (click)=\\\"picker.open()\\\"\\n                       placeholder=\\\"{{'SERVICES.SHUTTLE_DATE' | translate}} & {{'SERVICES.SHUTTLE_TIME' | translate}}\\\"\\n                       formControlName=\\\"date\\\" required readonly>\\n                <mat-hint align=\\\"start\\\">Enter your arrival time of flight</mat-hint>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker touchUi=\\\"false\\\" #picker></mat-datepicker>\\n              </mat-form-field>\\n            </td>\\n            <td>\\n              <input formControlName=\\\"time\\\" type=\\\"time\\\" class=\\\"time-input\\\" placeholder=\\\"Time\\\" required>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              <mat-form-field>\\n                <input type=\\\"text\\\" matInput placeholder=\\\"{{'SERVICES.SHUTTLE_FLIGHT_NAME' | translate}}\\\"\\n                       formControlName=\\\"flightName\\\"\\n                       pattern=\\\"[a-zA-Z0-9 ]*\\\" required>\\n                <mat-error *ngIf=\\\"airportForm.controls['flightName'].hasError('pattern')\\\">\\n                  {{'COMMON.ERROR_MESSAGES.ALPHANUMERIC_ONLY' | translate}}\\n                </mat-error>\\n              </mat-form-field>\\n            </td>\\n            <td>\\n              <mat-form-field>\\n                <input type=\\\"text\\\" matInput placeholder=\\\"{{'SERVICES.SHUTTLE_FLIGHT_NUMBER' | translate}}\\\"\\n                       formControlName=\\\"flightNumber\\\"\\n                       pattern=\\\"[a-zA-Z0-9 ]*\\\" required>\\n                <mat-error *ngIf=\\\"airportForm.controls['flightNumber'].hasError('pattern')\\\">\\n                  {{'COMMON.ERROR_MESSAGES.ALPHANUMERIC_ONLY' | translate}}\\n                </mat-error>\\n              </mat-form-field>\\n            </td>\\n          </tr>\\n        </table>\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"{{'SERVICES.SHUTTLE_YOUR_NAME' | translate}}\\\" formControlName=\\\"name\\\"\\n                 pattern=\\\"[a-zA-Z ]*\\\" required>\\n          <mat-error *ngIf=\\\"airportForm.controls['name'].hasError('pattern')\\\" required>\\n            {{'COMMON.ERROR_MESSAGES.ENGLISH_ONLY' | translate}}\\n          </mat-error>\\n        </mat-form-field>\\n      </mat-card-content>\\n    </form>\\n  </mat-card>\\n  <mat-card class=\\\"house-pickup-card pickup-card nj-card\\\"\\n            *ngIf=\\\"form.controls['departure'].value === PICKUP_SPOTS.HOUSE || form.controls['tripType'].value !== 'oneway'\\\">\\n    <mat-card-header class=\\\"nj-card-header\\\">\\n      <mat-card-title class=\\\"nj-card-title\\\">\\n        <mat-icon class=\\\"nj-card-title-icon\\\">home</mat-icon>\\n        <mat-icon class=\\\"nj-card-title-icon\\\">trending_flat</mat-icon>\\n        <mat-icon class=\\\"nj-card-title-icon\\\">local_airport</mat-icon>\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content class=\\\"nj-card-content\\\">\\n      <form [formGroup]=\\\"houseForm\\\">\\n        <table cellspacing=\\\"0\\\">\\n          <tr>\\n            <td>\\n              <mat-form-field class=\\\"nj-booking-date-picker\\\">\\n                <input matInput [matDatepicker]=\\\"picker\\\" [min]=\\\"airportForm.get('date').value\\\" formControlName=\\\"date\\\"\\n                       (click)=\\\"picker.open()\\\"\\n                       placeholder=\\\"{{'SERVICES.SHUTTLE_DATE' | translate}} & {{'SERVICES.SHUTTLE_TIME' | translate}}\\\"\\n                       required readonly>\\n                <mat-hint align=\\\"start\\\">Enter the time that you want to leave from the house</mat-hint>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker touchUi=\\\"false\\\" #picker></mat-datepicker>\\n              </mat-form-field>\\n            </td>\\n            <td>\\n              <input formControlName=\\\"time\\\" type=\\\"time\\\" id=\\\"houseTime\\\"\\n                     class=\\\"time-input\\\" placeholder=\\\"Time\\\" required>\\n            </td>\\n          </tr>\\n        </table>\\n      </form>\\n    </mat-card-content>\\n  </mat-card>\\n  <div class=\\\"button-box\\\">\\n    <mat-form-field class=\\\"total-price-form-field\\\">\\n      <input matInput type=\\\"text\\\" placeholder=\\\"{{'SERVICES.SHUTTLE_TOTAL_PRICE' | translate}}\\\"\\n             formControlName=\\\"price\\\"\\n             [value]=\\\"getPickupPrice() | number\\\" readonly>\\n      <span matSuffix>{{'COMMON.BAHT' | translate}}</span>\\n    </mat-form-field>\\n    <button class=\\\"submit-button\\\" mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">{{'SERVICES.SHUTTLE_CONTINUE'\\n      | translate}}\\n    </button>\\n  </div>\\n</form>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/services-pickup/dialog-booking/services-pickup-dialog-booking.html\n// module id = fBqT\n// module chunks = 1","module.exports = \"<p>{{'SERVICES.SHUTTLE_CONFIRM_HEADER' | translate}}</p>\\n<mat-card class=\\\"nj-card\\\">\\n  <mat-card-content class=\\\"nj-card-content\\\">\\n    <pre>{{data.message}}</pre>\\n  </mat-card-content>\\n</mat-card>\\n<p>{{'SERVICES.SHUTTLE_CONFIRM_INFO' | translate}}</p>\\n<div class=\\\"button-group\\\" *ngIf=\\\"!submitted\\\">\\n  <button mat-raised-button color=\\\"warn\\\" (click)=\\\"confirmDialog.close()\\\">\\n    {{'SERVICES.SHUTTLE_BACK'\\n    | translate}}\\n  </button>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">\\n    {{'SERVICES.SHUTTLE_SUBMIT'\\n    | translate}}\\n  </button>\\n</div>\\n<mat-spinner style=\\\"margin:0 auto;\\\" *ngIf=\\\"submitted\\\"></mat-spinner>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/services-pickup/dialog-confirm/services-pickup-dialog-confirm.html\n// module id = jjs0\n// module chunks = 1","\n        var result = require(\"!!../../../../node_modules/css-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!../../../../node_modules/sass-resources-loader/lib/loader.js??ref--3-3!./services-pickup.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/services/services-pickup/services-pickup.component.scss\n// module id = lpra\n// module chunks = 1","export enum PICKUP_SPOTS {\n  SUVARNABHUMI,\n  DONMUEANG,\n  HOUSE\n}\n\nexport const ServicesPickupInfo: PickupServiceInfo = {\n  vehicles: [\n    /*{\n      name: {\n        en: 'Honda Accord',\n        ko: '혼다 어코드',\n        cn: '本田雅阁'\n      },\n      capacity: '2 - 3',\n      price: 1000,\n      img: 'honda_accord.jpg'\n    },*/\n    {\n      name: {\n        en: 'Toyota Fortuner',\n        ko: '도요타 포츄너',\n        cn: '丰田Fortuner'\n      },\n      capacity: '1 - 4',\n      price: 1200,\n      img: 'toyota_fortuner.jpg'\n    },\n    {\n      name: {\n        en: 'Mini Van',\n        ko: '미니벤',\n        cn: '迷你范'\n      },\n      capacity: '4 - 8',\n      price: 2000,\n      img: 'mini_van.jpg'\n    }\n  ],\n  spots: [\n    {\n      type: PICKUP_SPOTS.SUVARNABHUMI,\n      name: {\n        i18n: 'SERVICES.SHUTTLE_SUVARNABHUMI'\n      },\n      location: 'Between gate number 3 and 4'\n    },\n    {\n      type: PICKUP_SPOTS.DONMUEANG,\n      name: {\n        i18n: 'SERVICES.SHUTTLE_DONMUEANG'\n      },\n      location: 'Gate number 3'\n    },\n    {\n      type: PICKUP_SPOTS.HOUSE,\n      name: {\n        i18n: 'SERVICES.SHUTTLE_HOUSE'\n      },\n      location: 'At the house lobby'\n    }\n  ]\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/services-pickup/services-pickup.const.ts","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\nimport { TranslationModule } from '../../../service/translationModule.provider';\nimport { AirbnbApiService } from '../../../service/airbnb.api.service';\n\n@Component({\n  selector: 'services-pickup-dialog-confirm',\n  templateUrl: 'services-pickup-dialog-confirm.html',\n  styleUrls: ['services-pickup-dialog-confirm.scss']\n})\nexport class ServicesPickupDialogConfirmComponent {\n\n  public submitted = false;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n              public dialog: MatDialog,\n              public confirmDialog: MatDialogRef<ServicesPickupDialogConfirmComponent>,\n              private airbnbApi: AirbnbApiService,\n              public translate: TranslationModule) {\n\n  }\n\n  public async submit() {\n    this.submitted = true;\n\n    const res = this.airbnbApi.sendMessage(276569855, this.data.message);\n    const resTemp = this.airbnbApi.requestShuttleService(this.data.bookingNumber, this.data.amount, this.data.message);\n\n    const subs = res.subscribe((r: any) => {\n      console.log('response', r);\n      this.dialog.closeAll();\n      alert('your request has been sent.\\n\\nThe host will contact you shortly.');\n    }, err => {\n      alert('Failed to send request. If the problem persists, please contact the host.');\n      this.submitted = false;\n    }, async () => {\n      await subs.unsubscribe();\n    });\n\n    const resTempSubs = resTemp.subscribe((r: any) => {\n      console.log('response', r);\n    }, err => {\n    }, async () => {\n      await resTempSubs.unsubscribe();\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/services-pickup/dialog-confirm/services-pickup-dialog-confirm.ts","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { TranslationModule } from '../../../service/translationModule.provider';\nimport { PICKUP_SPOTS } from '../services-pickup.const';\nimport { AirbnbApiService } from '../../../service/airbnb.api.service';\nimport { ServicesPickupDialogConfirmComponent } from '../dialog-confirm/services-pickup-dialog-confirm';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'services-pickup-dialog-booking',\n  templateUrl: 'services-pickup-dialog-booking.html',\n  styleUrls: ['services-pickup-dialog-booking.scss']\n})\nexport class ServicesPickupDialogBookingComponent implements OnInit {\n  public form: FormGroup;\n  public airportForm: FormGroup;\n  public houseForm: FormGroup;\n  public pickupInfo: PickupServiceInfo;\n  public selectedVehicle: PickupVehicle;\n  public confirmCode: string;\n  public departures: PickupSpot[];\n  public destination: PickupSpot[];\n  public PICKUP_SPOTS = PICKUP_SPOTS;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n              private airbnbApi: AirbnbApiService,\n              private formBuilder: FormBuilder,\n              public dialog: MatDialog,\n              public translate: TranslationModule) {\n\n    this.pickupInfo = Object.assign({}, data.pickupInfo);\n    this.selectedVehicle = Object.assign({}, data.selectedVehicle);\n    this.confirmCode = data.confirmCode;\n\n    this.form = formBuilder.group({\n      vehicle: null,\n      bookingNumber: this.confirmCode,\n      price: null,\n      tripType: 'oneway',\n      departure: null,\n      destination: {\n        value: null,\n        disabled: false\n      }\n    });\n\n    this.airportForm = formBuilder.group({\n      time: null,\n      date: null,\n      name: null,\n      flightName: null,\n      flightNumber: null\n    });\n\n    this.houseForm = formBuilder.group({\n      time: null,\n      date: null\n    });\n\n    this.departures = this.destination = this.pickupInfo.spots.slice();\n\n    this.form.valueChanges.subscribe(formData => {\n\n    });\n  }\n\n  public ngOnInit() {\n    this.form.get('vehicle').setValue(this.selectedVehicle.name[this.translate.getCurrentLang()]);\n    this.form.get('price').setValue(this.getPickupPrice());\n  }\n\n  public changeSpotOptions() {\n    const departureForm = this.form.get('departure');\n    const destinationForm = this.form.get('destination');\n    const tripTypeForm = this.form.get('tripType');\n\n    console.log('change spot options', this.airportForm.enabled, this.houseForm.enabled);\n\n    this.airportForm.enable();\n    this.houseForm.enable();\n    destinationForm.enable();\n    departureForm.enable();\n\n    this.departures = this.destination = this.pickupInfo.spots.slice();\n\n    if (tripTypeForm.value === 'oneway') {\n      if (departureForm.value === PICKUP_SPOTS.HOUSE) {\n        this.airportForm.disable();\n        destinationForm.setValue(null);\n        this.destination = this.pickupInfo.spots.filter(spot => spot.type !== PICKUP_SPOTS.HOUSE);\n      } else {\n        this.houseForm.disable();\n        this.fixDestinationToHouse();\n      }\n    } else {\n      this.departures = this.pickupInfo.spots.filter(spot => spot.type !== PICKUP_SPOTS.HOUSE);\n      if (departureForm.value === PICKUP_SPOTS.HOUSE) {\n        departureForm.setValue(null);\n      }\n      this.fixDestinationToHouse();\n    }\n  }\n\n  public getPickupPrice() {\n    const tripType = this.form.get('tripType').value;\n    const multiplier = tripType === 'oneway' ? 1 : 2;\n    return multiplier * this.selectedVehicle.price;\n  }\n\n  public async onSubmit() {\n    if (this.form.invalid) {\n      return;\n    }\n\n    const message = this.generateMessage();\n    this.validateAllFormFields(this.airportForm);\n    this.validateAllFormFields(this.houseForm);\n\n    if (this.airportForm.enabled && this.houseForm.enabled) {\n      if (this.airportForm.valid && this.houseForm.valid) {\n        console.log('submitting form', message);\n      }\n    } else if (this.houseForm.enabled) {\n      if (this.houseForm.valid) {\n        console.log('submitting form', message);\n      }\n    } else if (this.airportForm.enabled) {\n      if (this.airportForm.valid) {\n        console.log('submitting form', message);\n      }\n    }\n\n    this.openConfirmDialog(message);\n\n    //this.openConfirmDialog(message);\n    /*const res = await this.airbnbApi.sendMessage(276569855, message);\n\n    res.subscribe(r => {\n      console.log('response', r);\n    });*/\n  }\n\n  public openConfirmDialog(message: string) {\n    this.dialog.open(ServicesPickupDialogConfirmComponent, {\n      panelClass: 'nj-confirm-dialog',\n      height: '90%',\n      data: {\n        bookingNumber: this.form.get('bookingNumber').value,\n        amount: this.getPickupPrice(),\n        message\n      }\n    });\n  }\n\n  private generateMessage() {\n    const title = `Shuttle Service Request - ${this.form.get('tripType').value}\\n\\n`;\n    const price = `Total Price: ${this.getPickupPrice()}\\n\\n`;\n    let fromAirport = '';\n    let fromHouse = ``;\n\n    if (this.airportForm.enabled) {\n      fromAirport = `[Airport to House]\\n\\n`\n        + `booking number: ${this.form.get('bookingNumber').value}\\n`\n        + `vehicle: ${this.form.get('vehicle').value}\\n`\n        + `airport: ${PICKUP_SPOTS[this.form.get('departure').value]}\\n`\n        + `date & time: ${this.convertToReadableDate(this.airportForm.get('date').value)} ${this.airportForm.get('time').value}\\n`\n        + `flight: ${this.airportForm.get('flightName').value} ${this.airportForm.get('flightNumber').value}\\n`\n        + `name card: ${this.airportForm.get('name').value}\\n\\n`;\n    }\n\n    if (this.houseForm.enabled) {\n      fromHouse = `[House to Airport]\\n\\n`\n        + `date & time: ${this.convertToReadableDate(this.houseForm.get('date').value)} ${this.houseForm.get('time').value}\\n\\n`;\n    }\n\n    return title + fromAirport + fromHouse + price;\n\n  }\n\n  private fixDestinationToHouse() {\n    const destinationForm = this.form.get('destination');\n\n    this.destination = this.pickupInfo.spots.filter(spot => spot.type === PICKUP_SPOTS.HOUSE);\n    destinationForm.setValue(PICKUP_SPOTS.HOUSE);\n    destinationForm.disable();\n  }\n\n  private validateAllFormFields(formGroup: FormGroup) {\n    Object.keys(formGroup.controls).forEach(field => {\n      const control = formGroup.get(field);\n      if (control instanceof FormControl) {\n        control.markAsTouched({onlySelf: true});\n      } else if (control instanceof FormGroup) {\n        this.validateAllFormFields(control);\n      }\n    });\n  }\n\n  private convertToReadableDate(date: Date): string {\n    return moment(date).format('YYYY MMM DD dddd');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/services-pickup/dialog-booking/services-pickup-dialog-booking.ts","import { Component } from '@angular/core';\nimport { ServicesPickupInfo } from './services-pickup.const';\nimport { TranslationModule } from '../../service/translationModule.provider';\nimport { ServicesPickupDialogBookingComponent } from './dialog-booking/services-pickup-dialog-booking';\nimport { MatDialog } from '@angular/material';\nimport { AppState } from '../../app.service';\n\n@Component({\n  selector: 'nj-services-pickup',\n  styleUrls: ['services-pickup.component.scss'],\n  templateUrl: 'services-pickup.component.html'\n})\nexport class ServicesPickupComponent {\n  public pickupInfo: PickupServiceInfo;\n\n  constructor(public translate: TranslationModule,\n              public dialog: MatDialog,\n              public appState: AppState\n  ) {``\n    this.pickupInfo = ServicesPickupInfo;\n  }\n\n  public openDialog(vehicle: PickupVehicle) {\n    console.log('confirmation code', this.appState.get('confirmationCode'));\n    this.dialog.open(ServicesPickupDialogBookingComponent, {\n      panelClass: 'nj-booking-dialog',\n      height: '90%',\n      data: {\n        pickupInfo: this.pickupInfo,\n        selectedVehicle: vehicle,\n        confirmCode: this.appState.get('confirmationCode')\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/services-pickup/services-pickup.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ServicesPickupComponent } from './services-pickup.component';\nimport { NgCustomMaterialModule } from '../../ng-material/ng-material.module';\nimport { TranslationModule } from '../../service/translationModule.provider';\nimport { ServicesPickupDialogBookingComponent } from './dialog-booking/services-pickup-dialog-booking';\nimport { ServicesPickupDialogConfirmComponent } from './dialog-confirm/services-pickup-dialog-confirm';\n\n@NgModule({\n  declarations: [\n    ServicesPickupComponent,\n    ServicesPickupDialogBookingComponent,\n    ServicesPickupDialogConfirmComponent\n  ],\n  imports: [\n    CommonModule,\n    NgCustomMaterialModule,\n    TranslationModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ServicesPickupComponent\n      }\n    ]),\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  entryComponents: [\n    ServicesPickupDialogBookingComponent,\n    ServicesPickupDialogConfirmComponent\n  ],\n  exports: [\n    ServicesPickupComponent\n  ]\n})\n\nexport class ServicesPickupModule {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/services-pickup/services-pickup.module.ts"],"sourceRoot":"webpack:///"}